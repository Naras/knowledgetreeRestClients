/*
 * OpenAPI definition
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Link;
import io.swagger.client.model.WorkComponent;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Work
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-04-12T15:49:33.774Z[GMT]")
public class Work {
  @SerializedName("get_id")
  private String getId = null;

  @SerializedName("legacyid")
  private String legacyid = null;

  @SerializedName("title")
  private String title = null;

  @SerializedName("tags")
  private List<String> tags = null;

  @SerializedName("components")
  private List<WorkComponent> components = null;

  @SerializedName("work_relations")
  private List<Link> workRelations = null;

  @SerializedName("work_parents")
  private List<Link> workParents = null;

  @SerializedName("person_parents")
  private List<Link> personParents = null;

  @SerializedName("subject_parents")
  private List<Link> subjectParents = null;

  public Work getId(String getId) {
    this.getId = getId;
    return this;
  }

   /**
   * Get getId
   * @return getId
  **/
  @Schema(description = "")
  public String getGetId() {
    return getId;
  }

  public void setGetId(String getId) {
    this.getId = getId;
  }

  public Work legacyid(String legacyid) {
    this.legacyid = legacyid;
    return this;
  }

   /**
   * Get legacyid
   * @return legacyid
  **/
  @Schema(description = "")
  public String getLegacyid() {
    return legacyid;
  }

  public void setLegacyid(String legacyid) {
    this.legacyid = legacyid;
  }

  public Work title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @Schema(description = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public Work tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public Work addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Schema(description = "")
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }

  public Work components(List<WorkComponent> components) {
    this.components = components;
    return this;
  }

  public Work addComponentsItem(WorkComponent componentsItem) {
    if (this.components == null) {
      this.components = new ArrayList<WorkComponent>();
    }
    this.components.add(componentsItem);
    return this;
  }

   /**
   * Get components
   * @return components
  **/
  @Schema(description = "")
  public List<WorkComponent> getComponents() {
    return components;
  }

  public void setComponents(List<WorkComponent> components) {
    this.components = components;
  }

  public Work workRelations(List<Link> workRelations) {
    this.workRelations = workRelations;
    return this;
  }

  public Work addWorkRelationsItem(Link workRelationsItem) {
    if (this.workRelations == null) {
      this.workRelations = new ArrayList<Link>();
    }
    this.workRelations.add(workRelationsItem);
    return this;
  }

   /**
   * Get workRelations
   * @return workRelations
  **/
  @Schema(description = "")
  public List<Link> getWorkRelations() {
    return workRelations;
  }

  public void setWorkRelations(List<Link> workRelations) {
    this.workRelations = workRelations;
  }

  public Work workParents(List<Link> workParents) {
    this.workParents = workParents;
    return this;
  }

  public Work addWorkParentsItem(Link workParentsItem) {
    if (this.workParents == null) {
      this.workParents = new ArrayList<Link>();
    }
    this.workParents.add(workParentsItem);
    return this;
  }

   /**
   * Get workParents
   * @return workParents
  **/
  @Schema(description = "")
  public List<Link> getWorkParents() {
    return workParents;
  }

  public void setWorkParents(List<Link> workParents) {
    this.workParents = workParents;
  }

  public Work personParents(List<Link> personParents) {
    this.personParents = personParents;
    return this;
  }

  public Work addPersonParentsItem(Link personParentsItem) {
    if (this.personParents == null) {
      this.personParents = new ArrayList<Link>();
    }
    this.personParents.add(personParentsItem);
    return this;
  }

   /**
   * Get personParents
   * @return personParents
  **/
  @Schema(description = "")
  public List<Link> getPersonParents() {
    return personParents;
  }

  public void setPersonParents(List<Link> personParents) {
    this.personParents = personParents;
  }

  public Work subjectParents(List<Link> subjectParents) {
    this.subjectParents = subjectParents;
    return this;
  }

  public Work addSubjectParentsItem(Link subjectParentsItem) {
    if (this.subjectParents == null) {
      this.subjectParents = new ArrayList<Link>();
    }
    this.subjectParents.add(subjectParentsItem);
    return this;
  }

   /**
   * Get subjectParents
   * @return subjectParents
  **/
  @Schema(description = "")
  public List<Link> getSubjectParents() {
    return subjectParents;
  }

  public void setSubjectParents(List<Link> subjectParents) {
    this.subjectParents = subjectParents;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Work work = (Work) o;
    return Objects.equals(this.getId, work.getId) &&
        Objects.equals(this.legacyid, work.legacyid) &&
        Objects.equals(this.title, work.title) &&
        Objects.equals(this.tags, work.tags) &&
        Objects.equals(this.components, work.components) &&
        Objects.equals(this.workRelations, work.workRelations) &&
        Objects.equals(this.workParents, work.workParents) &&
        Objects.equals(this.personParents, work.personParents) &&
        Objects.equals(this.subjectParents, work.subjectParents);
  }

  @Override
  public int hashCode() {
    return Objects.hash(getId, legacyid, title, tags, components, workRelations, workParents, personParents, subjectParents);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Work {\n");
    
    sb.append("    getId: ").append(toIndentedString(getId)).append("\n");
    sb.append("    legacyid: ").append(toIndentedString(legacyid)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    components: ").append(toIndentedString(components)).append("\n");
    sb.append("    workRelations: ").append(toIndentedString(workRelations)).append("\n");
    sb.append("    workParents: ").append(toIndentedString(workParents)).append("\n");
    sb.append("    personParents: ").append(toIndentedString(personParents)).append("\n");
    sb.append("    subjectParents: ").append(toIndentedString(subjectParents)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
