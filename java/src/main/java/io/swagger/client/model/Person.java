/*
 * OpenAPI definition
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Address;
import io.swagger.client.model.Link;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
/**
 * Person
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-04-12T15:49:33.774Z[GMT]")
public class Person {
  @SerializedName("get_id")
  private String getId = null;

  @SerializedName("legacyid")
  private String legacyid = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("birthdate")
  private OffsetDateTime birthdate = null;

  @SerializedName("deathdate")
  private OffsetDateTime deathdate = null;

  @SerializedName("alive")
  private Boolean alive = null;

  @SerializedName("biography")
  private String biography = null;

  @SerializedName("period")
  private String period = null;

  @SerializedName("affiliation")
  private String affiliation = null;

  @SerializedName("address")
  private Address address = null;

  @SerializedName("person_relations")
  private List<Link> personRelations = null;

  @SerializedName("person_parents")
  private List<Link> personParents = null;

  @SerializedName("person_work_relations")
  private List<Link> personWorkRelations = null;

  public Person getId(String getId) {
    this.getId = getId;
    return this;
  }

   /**
   * Get getId
   * @return getId
  **/
  @Schema(description = "")
  public String getGetId() {
    return getId;
  }

  public void setGetId(String getId) {
    this.getId = getId;
  }

  public Person legacyid(String legacyid) {
    this.legacyid = legacyid;
    return this;
  }

   /**
   * Get legacyid
   * @return legacyid
  **/
  @Schema(description = "")
  public String getLegacyid() {
    return legacyid;
  }

  public void setLegacyid(String legacyid) {
    this.legacyid = legacyid;
  }

  public Person name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Person birthdate(OffsetDateTime birthdate) {
    this.birthdate = birthdate;
    return this;
  }

   /**
   * Get birthdate
   * @return birthdate
  **/
  @Schema(description = "")
  public OffsetDateTime getBirthdate() {
    return birthdate;
  }

  public void setBirthdate(OffsetDateTime birthdate) {
    this.birthdate = birthdate;
  }

  public Person deathdate(OffsetDateTime deathdate) {
    this.deathdate = deathdate;
    return this;
  }

   /**
   * Get deathdate
   * @return deathdate
  **/
  @Schema(description = "")
  public OffsetDateTime getDeathdate() {
    return deathdate;
  }

  public void setDeathdate(OffsetDateTime deathdate) {
    this.deathdate = deathdate;
  }

  public Person alive(Boolean alive) {
    this.alive = alive;
    return this;
  }

   /**
   * Get alive
   * @return alive
  **/
  @Schema(description = "")
  public Boolean isAlive() {
    return alive;
  }

  public void setAlive(Boolean alive) {
    this.alive = alive;
  }

  public Person biography(String biography) {
    this.biography = biography;
    return this;
  }

   /**
   * Get biography
   * @return biography
  **/
  @Schema(description = "")
  public String getBiography() {
    return biography;
  }

  public void setBiography(String biography) {
    this.biography = biography;
  }

  public Person period(String period) {
    this.period = period;
    return this;
  }

   /**
   * Get period
   * @return period
  **/
  @Schema(description = "")
  public String getPeriod() {
    return period;
  }

  public void setPeriod(String period) {
    this.period = period;
  }

  public Person affiliation(String affiliation) {
    this.affiliation = affiliation;
    return this;
  }

   /**
   * Get affiliation
   * @return affiliation
  **/
  @Schema(description = "")
  public String getAffiliation() {
    return affiliation;
  }

  public void setAffiliation(String affiliation) {
    this.affiliation = affiliation;
  }

  public Person address(Address address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @Schema(description = "")
  public Address getAddress() {
    return address;
  }

  public void setAddress(Address address) {
    this.address = address;
  }

  public Person personRelations(List<Link> personRelations) {
    this.personRelations = personRelations;
    return this;
  }

  public Person addPersonRelationsItem(Link personRelationsItem) {
    if (this.personRelations == null) {
      this.personRelations = new ArrayList<Link>();
    }
    this.personRelations.add(personRelationsItem);
    return this;
  }

   /**
   * Get personRelations
   * @return personRelations
  **/
  @Schema(description = "")
  public List<Link> getPersonRelations() {
    return personRelations;
  }

  public void setPersonRelations(List<Link> personRelations) {
    this.personRelations = personRelations;
  }

  public Person personParents(List<Link> personParents) {
    this.personParents = personParents;
    return this;
  }

  public Person addPersonParentsItem(Link personParentsItem) {
    if (this.personParents == null) {
      this.personParents = new ArrayList<Link>();
    }
    this.personParents.add(personParentsItem);
    return this;
  }

   /**
   * Get personParents
   * @return personParents
  **/
  @Schema(description = "")
  public List<Link> getPersonParents() {
    return personParents;
  }

  public void setPersonParents(List<Link> personParents) {
    this.personParents = personParents;
  }

  public Person personWorkRelations(List<Link> personWorkRelations) {
    this.personWorkRelations = personWorkRelations;
    return this;
  }

  public Person addPersonWorkRelationsItem(Link personWorkRelationsItem) {
    if (this.personWorkRelations == null) {
      this.personWorkRelations = new ArrayList<Link>();
    }
    this.personWorkRelations.add(personWorkRelationsItem);
    return this;
  }

   /**
   * Get personWorkRelations
   * @return personWorkRelations
  **/
  @Schema(description = "")
  public List<Link> getPersonWorkRelations() {
    return personWorkRelations;
  }

  public void setPersonWorkRelations(List<Link> personWorkRelations) {
    this.personWorkRelations = personWorkRelations;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Person person = (Person) o;
    return Objects.equals(this.getId, person.getId) &&
        Objects.equals(this.legacyid, person.legacyid) &&
        Objects.equals(this.name, person.name) &&
        Objects.equals(this.birthdate, person.birthdate) &&
        Objects.equals(this.deathdate, person.deathdate) &&
        Objects.equals(this.alive, person.alive) &&
        Objects.equals(this.biography, person.biography) &&
        Objects.equals(this.period, person.period) &&
        Objects.equals(this.affiliation, person.affiliation) &&
        Objects.equals(this.address, person.address) &&
        Objects.equals(this.personRelations, person.personRelations) &&
        Objects.equals(this.personParents, person.personParents) &&
        Objects.equals(this.personWorkRelations, person.personWorkRelations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(getId, legacyid, name, birthdate, deathdate, alive, biography, period, affiliation, address, personRelations, personParents, personWorkRelations);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Person {\n");
    
    sb.append("    getId: ").append(toIndentedString(getId)).append("\n");
    sb.append("    legacyid: ").append(toIndentedString(legacyid)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    birthdate: ").append(toIndentedString(birthdate)).append("\n");
    sb.append("    deathdate: ").append(toIndentedString(deathdate)).append("\n");
    sb.append("    alive: ").append(toIndentedString(alive)).append("\n");
    sb.append("    biography: ").append(toIndentedString(biography)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("    affiliation: ").append(toIndentedString(affiliation)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    personRelations: ").append(toIndentedString(personRelations)).append("\n");
    sb.append("    personParents: ").append(toIndentedString(personParents)).append("\n");
    sb.append("    personWorkRelations: ").append(toIndentedString(personWorkRelations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
